package OpenApiSchemasGenerator.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private ConceptPresentation props_BasicSchemaItemProperty;
  private ConceptPresentation props_Schema;
  private ConceptPresentation props_SchemaItem;
  private ConceptPresentation props_SchemaItemProperty;

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.BasicSchemaItemProperty:
        if (props_BasicSchemaItemProperty == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("BasicSchemaItemProperty");
          props_BasicSchemaItemProperty = cpb.create();
        }
        return props_BasicSchemaItemProperty;
      case LanguageConceptSwitch.Schema:
        if (props_Schema == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_Schema = cpb.create();
        }
        return props_Schema;
      case LanguageConceptSwitch.SchemaItem:
        if (props_SchemaItem == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_SchemaItem = cpb.create();
        }
        return props_SchemaItem;
      case LanguageConceptSwitch.SchemaItemProperty:
        if (props_SchemaItemProperty == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_SchemaItemProperty = cpb.create();
        }
        return props_SchemaItemProperty;
    }
    return null;
  }
}
