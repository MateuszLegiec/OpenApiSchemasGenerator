package OpenApiSchemasGenerator.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int BasicSchemaItemProperty = 0;
  public static final int Schema = 1;
  public static final int SchemaItem = 2;
  public static final int SchemaItemProperty = 3;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0xd81570c3b88484bL, 0xa6796a5b026c7325L);
    builder.put(0x54490bd22c0016c4L, BasicSchemaItemProperty);
    builder.put(0x43e166cfbfd667c7L, Schema);
    builder.put(0x42a28a236509160cL, SchemaItem);
    builder.put(0x42a28a23650980b0L, SchemaItemProperty);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
