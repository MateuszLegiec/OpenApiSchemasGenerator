package OpenApiSchemasGenerator.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.EnumerationDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptBasicSchemaItemProperty = createDescriptorForBasicSchemaItemProperty();
  /*package*/ final ConceptDescriptor myConceptSchema = createDescriptorForSchema();
  /*package*/ final ConceptDescriptor myConceptSchemaItem = createDescriptorForSchemaItem();
  /*package*/ final ConceptDescriptor myConceptSchemaItemProperty = createDescriptorForSchemaItemProperty();
  /*package*/ final EnumerationDescriptor myEnumerationBasicDataType = new EnumerationDescriptor_BasicDataType();
  /*package*/ final EnumerationDescriptor myEnumerationDataType = new EnumerationDescriptor_DataType();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptBasicSchemaItemProperty, myConceptSchema, myConceptSchemaItem, myConceptSchemaItemProperty);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.BasicSchemaItemProperty:
        return myConceptBasicSchemaItemProperty;
      case LanguageConceptSwitch.Schema:
        return myConceptSchema;
      case LanguageConceptSwitch.SchemaItem:
        return myConceptSchemaItem;
      case LanguageConceptSwitch.SchemaItemProperty:
        return myConceptSchemaItemProperty;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList(myEnumerationBasicDataType, myEnumerationDataType);
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForBasicSchemaItemProperty() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("OpenApiSchemasGenerator", "BasicSchemaItemProperty", 0xd81570c3b88484bL, 0xa6796a5b026c7325L, 0x54490bd22c0016c4L);
    b.class_(false, false, false);
    b.origin("r:5f158a74-1a78-4d4e-ae36-9b28db136cb3(OpenApiSchemasGenerator.structure)/6073398569795065540");
    b.version(2);
    b.property("type", 0x54490bd22c0016d6L).type(MetaIdFactory.dataTypeId(0xd81570c3b88484bL, 0xa6796a5b026c7325L, 0x54490bd22c0016c6L)).origin("6073398569795065558").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSchema() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("OpenApiSchemasGenerator", "Schema", 0xd81570c3b88484bL, 0xa6796a5b026c7325L, 0x43e166cfbfd667c7L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:5f158a74-1a78-4d4e-ae36-9b28db136cb3(OpenApiSchemasGenerator.structure)/4891303712763832263");
    b.version(2);
    b.aggregate("schemaItems", 0x42a28a236509162bL).target(0xd81570c3b88484bL, 0xa6796a5b026c7325L, 0x42a28a236509160cL).optional(true).ordered(true).multiple(true).origin("4801552037353952811").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSchemaItem() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("OpenApiSchemasGenerator", "SchemaItem", 0xd81570c3b88484bL, 0xa6796a5b026c7325L, 0x42a28a236509160cL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:5f158a74-1a78-4d4e-ae36-9b28db136cb3(OpenApiSchemasGenerator.structure)/4801552037353952780");
    b.version(2);
    b.aggregate("properties", 0x42a28a23650980ffL).target(0xd81570c3b88484bL, 0xa6796a5b026c7325L, 0x42a28a23650980b0L).optional(true).ordered(true).multiple(true).origin("4801552037353980159").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSchemaItemProperty() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("OpenApiSchemasGenerator", "SchemaItemProperty", 0xd81570c3b88484bL, 0xa6796a5b026c7325L, 0x42a28a23650980b0L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:5f158a74-1a78-4d4e-ae36-9b28db136cb3(OpenApiSchemasGenerator.structure)/4801552037353980080");
    b.version(2);
    b.property("type", 0x42a28a23650980b1L).type(MetaIdFactory.dataTypeId(0xd81570c3b88484bL, 0xa6796a5b026c7325L, 0x42a28a2365098095L)).origin("4801552037353980081").done();
    b.property("default", 0x42a28a23650980b3L).type(PrimitiveTypeId.STRING).origin("4801552037353980083").done();
    b.property("description", 0x42a28a23650980b6L).type(PrimitiveTypeId.STRING).origin("4801552037353980086").done();
    b.property("pattern", 0x42a28a23650980baL).type(PrimitiveTypeId.STRING).origin("4801552037353980090").done();
    b.property("minimum", 0x42a28a23650980bfL).type(PrimitiveTypeId.STRING).origin("4801552037353980095").done();
    b.property("maximum", 0x42a28a23650980c5L).type(PrimitiveTypeId.STRING).origin("4801552037353980101").done();
    b.aggregate("items", 0x42a28a23650b57b8L).target(0xd81570c3b88484bL, 0xa6796a5b026c7325L, 0x54490bd22c0016c4L).optional(true).ordered(true).multiple(false).origin("4801552037354100664").done();
    return b.create();
  }
}
